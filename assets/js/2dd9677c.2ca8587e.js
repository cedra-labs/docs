"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[9287],{5537:(e,n,t)=>{t.d(n,{A:()=>k});var a=t(6540),r=t(4164),s=t(5627),i=t(6347),c=t(372),o=t(604),l=t(1861),d=t(8749);function u(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a}))}(t);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(r),(0,a.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})},[r,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=h(e),[i,o]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[l,u]=m({queryString:t,groupId:r}),[f,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,d.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),x=(()=>{const e=l??f;return p({value:e,tabValues:s})?e:null})();(0,c.A)(()=>{x&&o(x)},[x]);return{selectedValue:i,selectValue:(0,a.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)},[u,g,s]),tabValues:s}}var g=t(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(4848);function b({className:e,block:n,selectedValue:t,selectValue:a,tabValues:i}){const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),l=e=>{const n=e.currentTarget,r=c.indexOf(n),s=i[r].value;s!==t&&(o(n),a(s))},d=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:a})=>(0,y.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{c.push(e)},onKeyDown:d,onClick:l,...a,className:(0,r.A)("tabs__item",x.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function j(e){const n=f(e);return(0,y.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,y.jsx)(b,{...n,...e}),(0,y.jsx)(v,{...n,...e})]})}function k(e){const n=(0,g.A)();return(0,y.jsx)(j,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var a=t(6540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var a=t(4164);const r={tabItem:"tabItem_Ymn6"};var s=t(4848);function i({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,t),hidden:n,children:e})}},9716:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"sdks/typescript-sdk","title":"TypeScript SDK","description":"Build on Cedra with confidence using our TypeScript SDK. Designed for Web3 developers, the SDK provides an intuitive interface to interact with the Cedra blockchain. Whether you\'re building DeFi protocols, NFT marketplaces, or innovative dApps, our SDK makes blockchain development straightforward with full type safety and comprehensive documentation.","source":"@site/docs/sdks/typescript-sdk.mdx","sourceDirName":"sdks","slug":"/sdks/typescript-sdk","permalink":"/sdks/typescript-sdk","draft":false,"unlisted":false,"editUrl":"https://github.com/cedra-labs/docs/edit/main/docs/sdks/typescript-sdk.mdx","tags":[],"version":"current","frontMatter":{"title":"TypeScript SDK","sidebar_label":"TypeScript SDK"},"sidebar":"docs","previous":{"title":"Rust SDK","permalink":"/sdks/rust-sdk"},"next":{"title":"Accounts","permalink":"/sdks/typescript/accounts"}}');var r=t(4848),s=t(8453);t(5537),t(9329);const i={title:"TypeScript SDK",sidebar_label:"TypeScript SDK"},c="\ud83d\ude80 TypeScript SDK",o={},l=[{value:"Start Building in Minutes and Learn more",id:"start-building-in-minutes-and-learn-more",level:3},{value:"Client Initialization",id:"client-initialization",level:3},{value:"Reading Blockchain Data",id:"reading-blockchain-data",level:3},{value:"Smart Contract Calls",id:"smart-contract-calls",level:3},{value:"\ud83d\udcda Next Steps",id:"-next-steps",level:2},{value:"\ud83d\udd17 Resources",id:"-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-typescript-sdk",children:"\ud83d\ude80 TypeScript SDK"})}),"\n",(0,r.jsx)(n.p,{children:"Build on Cedra with confidence using our TypeScript SDK. Designed for Web3 developers, the SDK provides an intuitive interface to interact with the Cedra blockchain. Whether you're building DeFi protocols, NFT marketplaces, or innovative dApps, our SDK makes blockchain development straightforward with full type safety and comprehensive documentation.\nSDK provides everything you need to interact with the Cedra blockchain."}),"\n",(0,r.jsx)(n.h3,{id:"start-building-in-minutes-and-learn-more",children:"Start Building in Minutes and Learn more"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Cedra, Account } from \"@cedra-labs/ts-sdk\";\n\n// That's it! You're ready to build on Cedra\nconst client = new Cedra();\nconst account = Account.generate();\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/getting-started/tx#creating-your-first-transaction",children:"\ud83c\udfaf First Transaction"})})," - Send your first tokens in under 5 minutes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"#key-concepts",children:"\ud83d\udcd6 Key Concepts"})})," - Understand accounts, transactions, and gas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/sdks/typescript/accounts",children:"\ud83d\udcbc Manage Accounts"})})," - Create and manage wallets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/sdks/typescript/transactions",children:"\ud83d\udcb8 Send Transactions"})})," - Build and submit transactions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/sdks/typescript/examples",children:"\ud83c\udfae Real Examples"})})," - Learn from production code"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Ready to dive deeper? Let's explore what makes Cedra special."}),"\n",(0,r.jsx)(n.h3,{id:"client-initialization",children:"Client Initialization"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Cedra"})," client is your gateway to the blockchain:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Default testnet connection\n// Automatically connects to https://testnet.cedra.dev/v1\nconst client = new Cedra();\n\n// Custom configuration with specific network\n// Network enum provides predefined configurations\nconst client = new Cedra(new CedraConfig({\n  network: Network.TESTNET,\n  fullnode: "https://custom-node.com/v1",  // Optional: override default endpoint\n}));\n\n// Direct URL configuration for custom networks\nconst client = new Cedra(new CedraConfig({\n  fullnode: "http://localhost:8080/v1",    // Local node or custom deployment\n}));\n'})}),"\n",(0,r.jsx)(n.h3,{id:"reading-blockchain-data",children:"Reading Blockchain Data"}),"\n",(0,r.jsx)(n.p,{children:"The SDK provides several methods to query on-chain data without any gas costs. These read operations are essential for checking balances, verifying account states, and exploring deployed smart contracts."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Get account information including sequence number and authentication key\n// Useful for checking if an account exists on-chain\nconst account = await client.getAccountInfo({\n  accountAddress: "0x1"\n});\n\n// Query all Move modules (smart contracts) deployed by an account\n// Returns module bytecode and ABI information\nconst modules = await client.getAccountModules({\n  accountAddress: "0x1"\n});\n\n// Fetch transaction history for an account\n// Returns an array of committed transactions\nconst txns = await client.getAccountTransactions({\n  accountAddress: "0x1"\n});\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Each method returns typed responses, ensuring type safety throughout your application. The ",(0,r.jsx)(n.code,{children:"getAccountInfo"})," method is particularly useful before sending transactions to verify account existence, while ",(0,r.jsx)(n.code,{children:"getAccountModules"})," helps discover available smart contract functions."]}),"\n",(0,r.jsx)(n.h3,{id:"smart-contract-calls",children:"Smart Contract Calls"}),"\n",(0,r.jsx)(n.p,{children:"Cedra uses Move for smart contracts, offering two types of function calls: view functions for reading data and entry functions for state modifications. The SDK makes both operations type-safe and straightforward."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Call a view function to read on-chain state without gas costs\n// View functions are read-only and don\'t modify blockchain state\nconst result = await client.view({\n  function: "0x1::coin::balance",           // Module::function format\n  type_arguments: ["0x1::cedra_coin::CedraCoin"], // Generic type parameters\n  arguments: [account.accountAddress],      // Function arguments\n});\n\n// Execute an entry function that modifies blockchain state\n// Requires signing and gas payment\nconst txn = await client.transaction.build.simple({\n  sender: account.accountAddress,\n  data: {\n    function: "0x1::managed_coin::mint",     // Entry function to call\n    typeArguments: ["0x1::my_coin::MyCoin"], // Token type to mint\n    functionArguments: [recipient, amount],   // Mint recipient and amount\n  },\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"View functions are perfect for querying balances, checking conditions, or retrieving configuration values. Entry functions handle all state-changing operations like transfers, minting, or updating smart contract data. The SDK automatically handles serialization and ensures type safety for all arguments."}),"\n",(0,r.jsx)(n.h2,{id:"-next-steps",children:"\ud83d\udcda Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Ready to dive deeper? Explore these guides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/sdks/typescript/accounts",children:"Account Management"})})," - Create and manage Cedra accounts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/sdks/typescript/transactions",children:"Transaction Guide"})})," - Build and submit transactions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/sdks/typescript/examples",children:"Examples & Patterns"})})," - Real-world code examples"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-resources",children:"\ud83d\udd17 Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/cedra-labs/cedra-ts-sdk#api",children:"Complete API Reference"})})," - Full SDK documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/cedra-labs/cedra-ts-sdk/tree/main/examples",children:"Example Projects"})})," - Sample implementations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/move",children:"Move Smart Contracts"})})," - Learn about Cedra's smart contract language"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/concepts",children:"Blockchain Concepts"})})," - Understand Cedra's architecture"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);