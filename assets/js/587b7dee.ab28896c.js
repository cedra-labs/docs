"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[652],{8453:(e,n,c)=>{c.d(n,{R:()=>d,x:()=>o});var s=c(6540);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}},9435:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"move/modules/accounts","title":"Accounts Module","description":"This document describes the Accounts module, which handles user account management within the Cedra protocol.","source":"@site/docs/move/modules/accounts.md","sourceDirName":"move/modules","slug":"/move/modules/accounts","permalink":"/docs/move/modules/accounts","draft":false,"unlisted":false,"editUrl":"https://github.com/cedra-labs/docs/edit/main/docs/move/modules/accounts.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"accounts","title":"Accounts Module","sidebar_position":2},"sidebar":"docs","previous":{"title":"Cedra Core Module","permalink":"/docs/move/modules/cedra"}}');var t=c(4848),r=c(8453);const d={id:"accounts",title:"Accounts Module",sidebar_position:2},o="Accounts Module",i={},l=[{value:"Module Overview",id:"module-overview",level:2},{value:"Resources and Structs",id:"resources-and-structs",level:2},{value:"Resource: <code>AccountInfo</code>",id:"resource-accountinfo",level:3},{value:"Struct: <code>AccountCapability</code>",id:"struct-accountcapability",level:3},{value:"Public Functions",id:"public-functions",level:2},{value:"create_account",id:"create_account",level:3},{value:"Example Usage",id:"example-usage",level:3},{value:"get_account_info",id:"get_account_info",level:3},{value:"Events",id:"events",level:2},{value:"AccountCreatedEvent",id:"accountcreatedevent",level:3},{value:"AccountUpdatedEvent",id:"accountupdatedevent",level:3},{value:"Error Codes",id:"error-codes",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"accounts-module",children:"Accounts Module"})}),"\n",(0,t.jsx)(n.p,{children:"This document describes the Accounts module, which handles user account management within the Cedra protocol."}),"\n",(0,t.jsx)(n.h2,{id:"module-overview",children:"Module Overview"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"/// Module for managing Cedra user accounts\nmodule cedra::accounts {\n    // Resources, structs, and functions\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"resources-and-structs",children:"Resources and Structs"}),"\n",(0,t.jsxs)(n.h3,{id:"resource-accountinfo",children:["Resource: ",(0,t.jsx)(n.code,{children:"AccountInfo"})]}),"\n",(0,t.jsx)(n.p,{children:"Stores information about a user account."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"struct AccountInfo has key {\n    // Fields\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"struct-accountcapability",children:["Struct: ",(0,t.jsx)(n.code,{children:"AccountCapability"})]}),"\n",(0,t.jsx)(n.p,{children:"Represents permission capability for account operations."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"struct AccountCapability has copy, drop, store {\n    // Fields\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"public-functions",children:"Public Functions"}),"\n",(0,t.jsx)(n.h3,{id:"create_account",children:"create_account"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"public entry fun create_account(user: &signer)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Creates a new account within the Cedra protocol."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"user: &signer"})," - The signer of the account to be created"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Errors:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"EACCOUNT_ALREADY_EXISTS"})," - If the account already exists"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"EPROTOCOL_NOT_INITIALIZED"})," - If the Cedra protocol has not been initialized"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"use cedra::accounts;\n\npublic entry fun create_my_account(user: &signer) {\n    accounts::create_account(user);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"get_account_info",children:"get_account_info"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"public fun get_account_info(addr: address): AccountInfo\n"})}),"\n",(0,t.jsx)(n.p,{children:"Retrieves account information for the given address."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"addr: address"})," - The address to get account information for"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AccountInfo"})," - The account information"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Errors:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"EACCOUNT_DOESNT_EXIST"})," - If the account does not exist"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,t.jsx)(n.h3,{id:"accountcreatedevent",children:"AccountCreatedEvent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"struct AccountCreatedEvent has drop, store {\n    // Fields\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Emitted when a new account is created."}),"\n",(0,t.jsx)(n.h3,{id:"accountupdatedevent",children:"AccountUpdatedEvent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-move",children:"struct AccountUpdatedEvent has drop, store {\n    // Fields\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Emitted when an account is updated."}),"\n",(0,t.jsx)(n.h2,{id:"error-codes",children:"Error Codes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Code"}),(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EACCOUNT_ALREADY_EXISTS"})}),(0,t.jsx)(n.td,{children:"The account already exists"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EACCOUNT_DOESNT_EXIST"})}),(0,t.jsx)(n.td,{children:"The account does not exist"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EPROTOCOL_NOT_INITIALIZED"})}),(0,t.jsx)(n.td,{children:"The Cedra protocol has not been initialized"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EINVALID_PERMISSION"})}),(0,t.jsx)(n.td,{children:"The signer does not have permission for this operation"})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);