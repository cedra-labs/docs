"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[2285],{8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},9553:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"indexer/how-it-works","title":"How Indexing Works","description":"Understand the complete journey from blockchain transactions to queryable data in your applications.","source":"@site/docs/indexer/how-it-works.mdx","sourceDirName":"indexer","slug":"/indexer/how-it-works","permalink":"/indexer/how-it-works","draft":false,"unlisted":false,"editUrl":"https://github.com/cedra-labs/docs/edit/main/docs/indexer/how-it-works.mdx","tags":[],"version":"current","frontMatter":{"title":"How Indexing Works"},"sidebar":"docs","previous":{"title":"\ud83d\ude80 Cedra Indexer","permalink":"/indexer/"},"next":{"title":"Common Queries","permalink":"/indexer/common-queries"}}');var t=s(4848),i=s(8453);const a={title:"How Indexing Works"},o="How Cedra Indexing Works",l={},c=[{value:"\ud83d\udd04 The Indexing Pipeline",id:"-the-indexing-pipeline",level:2},{value:"\ud83d\udce6 What&#39;s in a Transaction?",id:"-whats-in-a-transaction",level:2},{value:"\ud83c\udfaf Processing Flow",id:"-processing-flow",level:2},{value:"Step 1: <strong>Connect to Stream</strong>",id:"step-1-connect-to-stream",level:3},{value:"Step 2: <strong>Extract Data</strong>",id:"step-2-extract-data",level:3},{value:"Step 3: <strong>Transform &amp; Store</strong>",id:"step-3-transform--store",level:3},{value:"Step 4: <strong>Query via GraphQL</strong>",id:"step-4-query-via-graphql",level:3},{value:"\u26a1 Key Features",id:"-key-features",level:2},{value:"\ud83d\udd04 <strong>Real-time Processing</strong>",id:"-real-time-processing",level:3},{value:"\ud83d\udee1\ufe0f <strong>Reliability Built-in</strong>",id:"\ufe0f-reliability-built-in",level:3},{value:"\ud83d\udcc8 <strong>Scalable Architecture</strong>",id:"-scalable-architecture",level:3},{value:"\ud83c\udfac See It In Action",id:"-see-it-in-action",level:2},{value:"\ud83d\udcca Version System",id:"-version-system",level:2},{value:"\ud83d\udea6 Processing Status",id:"-processing-status",level:2},{value:"\ud83d\udd0d What Happens During a Restart?",id:"-what-happens-during-a-restart",level:2},{value:"\ud83d\udca1 Best Practices",id:"-best-practices",level:2},{value:"\ud83c\udfaf Next Steps",id:"-next-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"how-cedra-indexing-works",children:"How Cedra Indexing Works"})}),"\n",(0,t.jsx)(n.p,{children:"Understand the complete journey from blockchain transactions to queryable data in your applications."}),"\n",(0,t.jsx)(n.h2,{id:"-the-indexing-pipeline",children:"\ud83d\udd04 The Indexing Pipeline"}),"\n",(0,t.jsx)(n.mermaid,{value:'graph LR\n    subgraph "Cedra Network"\n        BN[\ud83d\udd17 Blockchain<br/>Nodes]\n        TS[\ud83d\udce1 Transaction<br/>Stream]\n    end\n    \n    subgraph "Your Indexer"\n        P[\u2699\ufe0f Processor]\n        DB[(\ud83d\uddc4\ufe0f PostgreSQL)]\n    end\n    \n    subgraph "Query Layer"\n        GQL[\ud83d\udcca GraphQL API]\n        APP[\ud83d\udcbb Your App]\n    end\n    \n    BN --\x3e|Transactions| TS\n    TS --\x3e|Stream| P\n    P --\x3e|Store| DB\n    DB --\x3e|Serve| GQL\n    GQL --\x3e|Query| APP\n    \n    style BN fill:#e3f2fd\n    style TS fill:#e3f2fd\n    style P fill:#fff3e0\n    style DB fill:#e8f5e9\n    style GQL fill:#f3e5f5\n    style APP fill:#fce4ec'}),"\n",(0,t.jsx)(n.h2,{id:"-whats-in-a-transaction",children:"\ud83d\udce6 What's in a Transaction?"}),"\n",(0,t.jsx)(n.p,{children:"Every transaction your indexer receives contains:"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsxs)("summary",{children:[(0,t.jsx)(n.strong,{children:"Events"})," - What happened during execution"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'// Example: Token Transfer Event\nEvent {\n    account_address: "0x123...",\n    type: "0x1::coin::TransferEvent",\n    data: {\n        from: "0xabc...",\n        to: "0xdef...",\n        amount: 1000000\n    }\n}\n'})}),(0,t.jsx)(n.p,{children:"Events are perfect for:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Activity feeds"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Transaction history"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 User analytics"}),"\n"]})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsxs)("summary",{children:[(0,t.jsx)(n.strong,{children:"State Changes"})," - How storage was modified"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'// Example: Balance Update\nWriteSet {\n    resource: "0x1::coin::CoinStore",\n    address: "0x456...",\n    data: {\n        coin: { value: 5000000 },\n        frozen: false\n    }\n}\n'})}),(0,t.jsx)(n.p,{children:"State changes are essential for:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Current balances"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Ownership tracking"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Protocol state"}),"\n"]})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsxs)("summary",{children:[(0,t.jsx)(n.strong,{children:"Metadata"})," - Transaction details"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'// Transaction context\nTransaction {\n    version: 1234567,        // Unique sequence number\n    hash: "0xabc123...",     // Transaction identifier\n    timestamp: 1704067200,   // When it happened\n    success: true,           // Execution status\n    gas_used: 1500          // Computational cost\n}\n'})})]}),"\n",(0,t.jsx)(n.h2,{id:"-processing-flow",children:"\ud83c\udfaf Processing Flow"}),"\n",(0,t.jsxs)(n.h3,{id:"step-1-connect-to-stream",children:["Step 1: ",(0,t.jsx)(n.strong,{children:"Connect to Stream"})]}),"\n",(0,t.jsx)(n.p,{children:"Your processor connects to Cedra's Transaction Stream Service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# No authentication needed - it's public!\ntransaction_stream:\n  endpoint: https://testnet.cedra.dev\n  batch_size: 1000  # Process 1000 txns at once\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"step-2-extract-data",children:["Step 2: ",(0,t.jsx)(n.strong,{children:"Extract Data"})]}),"\n",(0,t.jsx)(n.p,{children:"Choose what to index based on your needs:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Strategy"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Use When"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Example"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Events Only"})}),(0,t.jsx)(n.td,{children:"Tracking actions"}),(0,t.jsx)(n.td,{children:"DEX swaps, transfers"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"State Only"})}),(0,t.jsx)(n.td,{children:"Current values"}),(0,t.jsx)(n.td,{children:"Token balances, TVL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Hybrid"})}),(0,t.jsx)(n.td,{children:"Complete picture"}),(0,t.jsx)(n.td,{children:"Full protocol state"})]})]})]}),"\n",(0,t.jsxs)(n.h3,{id:"step-3-transform--store",children:["Step 3: ",(0,t.jsx)(n.strong,{children:"Transform & Store"})]}),"\n",(0,t.jsx)(n.p,{children:"Process data and save to PostgreSQL:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'// Simplified processing logic\nasync fn process(transactions: Vec<Transaction>) {\n    for txn in transactions {\n        // Extract relevant events\n        let events = txn.events\n            .filter(|e| e.type.contains("YourContract"));\n        \n        // Transform to your schema\n        let records = events.map(|e| transform(e));\n        \n        // Batch insert to database\n        database.insert_batch(records).await;\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"step-4-query-via-graphql",children:["Step 4: ",(0,t.jsx)(n.strong,{children:"Query via GraphQL"})]}),"\n",(0,t.jsx)(n.p,{children:"Your data is instantly available:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:'query YourCustomData {\n  your_table(\n    where: {timestamp: {_gte: "2024-01-01"}}\n    order_by: {value: desc}\n  ) {\n    id\n    timestamp\n    value\n    metadata\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-key-features",children:"\u26a1 Key Features"}),"\n",(0,t.jsxs)(n.h3,{id:"-real-time-processing",children:["\ud83d\udd04 ",(0,t.jsx)(n.strong,{children:"Real-time Processing"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Transactions indexed within seconds"}),"\n",(0,t.jsx)(n.li,{children:"Live data feeds for dashboards"}),"\n",(0,t.jsx)(n.li,{children:"WebSocket subscriptions available"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"\ufe0f-reliability-built-in",children:["\ud83d\udee1\ufe0f ",(0,t.jsx)(n.strong,{children:"Reliability Built-in"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version Tracking"}),": Sequential processing guaranteed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automatic Recovery"}),": Resume from last checkpoint"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No Data Loss"}),": Every transaction processed exactly once"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"-scalable-architecture",children:["\ud83d\udcc8 ",(0,t.jsx)(n.strong,{children:"Scalable Architecture"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Process millions of transactions"}),"\n",(0,t.jsx)(n.li,{children:"Parallel processing support"}),"\n",(0,t.jsx)(n.li,{children:"Optimized batch operations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-see-it-in-action",children:"\ud83c\udfac See It In Action"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.strong,{children:"Example: Indexing Token Transfers"})}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transaction occurs"})," on Cedra blockchain"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stream delivers"})," to your processor (< 1 second)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Processor extracts"})," transfer events"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data stored"})," in PostgreSQL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GraphQL serves"})," to your application"]}),"\n"]}),(0,t.jsx)(n.p,{children:"Total time: ~2-3 seconds from transaction to queryable data!"})]}),"\n",(0,t.jsx)(n.h2,{id:"-version-system",children:"\ud83d\udcca Version System"}),"\n",(0,t.jsx)(n.p,{children:"Cedra uses a sequential version system that ensures data consistency:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Transaction Version Timeline:\n[1] \u2192 [2] \u2192 [3] \u2192 [4] \u2192 [5] \u2192 ...\n \u2191\nYour indexer processes each version exactly once\n"})}),"\n",(0,t.jsx)(n.p,{children:"Benefits:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"No gaps"}),": Every transaction captured"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Ordered"}),": Process in exact sequence"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Resumable"}),": Restart from any version"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Verifiable"}),": Check processing completeness"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-processing-status",children:"\ud83d\udea6 Processing Status"}),"\n",(0,t.jsx)(n.p,{children:"Monitor your indexer's progress:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Check current processing status\nSELECT * FROM processor_status;\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 processor   \u2502 last_success_version \u2502 last_updated    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 my_indexer  \u2502 1234567           \u2502 2024-01-15 10:30 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-what-happens-during-a-restart",children:"\ud83d\udd0d What Happens During a Restart?"}),"\n",(0,t.jsx)(n.p,{children:"The indexer automatically handles failures:"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    START[Indexer Starts] --\x3e CHECK{Check Last Version}\n    CHECK --\x3e|Found: 1234| RESUME[Resume from 1235]\n    CHECK --\x3e|Not Found| BEGIN[Start from 0]\n    RESUME --\x3e PROCESS[Process Transactions]\n    BEGIN --\x3e PROCESS\n    PROCESS --\x3e SAVE[Save & Checkpoint]\n    SAVE --\x3e PROCESS"}),"\n",(0,t.jsx)(n.p,{children:"No manual intervention needed - just restart and continue!"}),"\n",(0,t.jsx)(n.h2,{id:"-best-practices",children:"\ud83d\udca1 Best Practices"}),"\n",(0,t.jsx)(n.admonition,{title:"Performance Tips",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batch Operations"}),": Process 1000-5000 transactions per batch"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Index Strategy"}),": Create database indexes on frequently queried fields"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitor Lag"}),": Keep processing within 100 versions of chain tip"]}),"\n"]})}),"\n",(0,t.jsx)(n.admonition,{title:"Common Pitfalls",type:"warning",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Don't process transactions one-by-one (too slow)"}),"\n",(0,t.jsx)(n.li,{children:"Don't skip version tracking (loses recovery ability)"}),"\n",(0,t.jsx)(n.li,{children:"Don't ignore failed transactions (may contain important reverts)"}),"\n"]})}),"\n",(0,t.jsx)(n.h2,{id:"-next-steps",children:"\ud83c\udfaf Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"Now that you understand how indexing works:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/indexer/sdk",children:"SDK Guide"})})," - Get started with processors"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/indexer/processors",children:"Processors"})})," - Available processor types"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/indexer/common-queries",children:"Common Queries"})})," - GraphQL patterns"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.admonition,{title:"Ready to Build?",type:"success",children:[(0,t.jsx)(n.p,{children:"You now understand the complete indexing flow. Time to understand queries!"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/indexer/common-queries",children:"Continue to Common Queries \u2192"})})})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);