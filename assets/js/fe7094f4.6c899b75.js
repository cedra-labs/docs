"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[732],{4767:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"getting-started/faucet","title":"Get Cedra Test Tokens (CEDRA) - cURL & CLI","description":"This short guide explains how to request Cedra testnet tokens (CEDRA) from the command line using curl. These tokens are only for development and testing\u2014they have no real\u2011world value, and it is impossible to mint CedraCoin on the Cedra mainnet.","source":"@site/docs/getting-started/faucet.md","sourceDirName":"getting-started","slug":"/getting-started/faucet","permalink":"/docs/getting-started/faucet","draft":false,"unlisted":false,"editUrl":"https://github.com/cedra-labs/docs/edit/main/docs/getting-started/faucet.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"CLI Installation","permalink":"/docs/getting-started/cli"},"next":{"title":"CLI Usage","permalink":"/docs/cli/usage"}}');var r=t(4848),i=t(8453);const a={},c="Get Cedra Test Tokens (CEDRA) - cURL & CLI",d={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1 \xb7 Mint test tokens",id:"1--mint-test-tokens",level:2},{value:"2 \xb7 Verify your balance",id:"2--verify-your-balance",level:2},{value:"Alternative \xb7 Fund via CLI faucet (1\xa0CEDRA)",id:"alternative--fund-via-cli-faucet-1cedra",level:2},{value:"Usage notes",id:"usage-notes",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"get-cedra-test-tokens-cedra---curl--cli",children:"Get Cedra Test Tokens (CEDRA) - cURL & CLI"})}),"\n",(0,r.jsxs)(n.p,{children:["This short guide explains how to request Cedra testnet tokens (CEDRA) ",(0,r.jsx)(n.strong,{children:"from the command line"})," using ",(0,r.jsx)(n.code,{children:"curl"}),". These tokens are only for development and testing\u2014",(0,r.jsx)(n.strong,{children:"they have no real\u2011world value"}),", and it is ",(0,r.jsx)(n.strong,{children:"impossible to mint CedraCoin on the Cedra mainnet"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"cURL installed"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["macOS / Linux: already present or ",(0,r.jsx)(n.code,{children:"brew install curl"})]}),"\n",(0,r.jsxs)(n.li,{children:["Windows: install via ",(0,r.jsx)(n.a,{href:"https://curl.se/download.html",children:"official binaries"})," or use WSL."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cedra testnet account"})," (address & authentication key).\nUse your account or generate one with the Cedra CLI:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'cedra init  # interactive; choose \\"devnet\\" when prompted\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Save the ",(0,r.jsx)(n.code,{children:"account address"})," (0x\u2026) and the ",(0,r.jsx)(n.code,{children:"authentication key"})," (64\u2011char hex). If you need to look up the address later, run ",(0,r.jsx)(n.code,{children:"cedra account lookup-address"}),".\xa0If you need an address with a balance, just run\xa0",(0,r.jsx)(n.code,{children:"cedra account show"}),"\xa0"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1--mint-test-tokens",children:"1 \xb7 Mint test tokens"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl --location --request POST \\\n  \"https://faucet.cedra.dev/mint?amount=<AMOUNT>&auth_key=<AUTH_KEY>\" \\\n  --data ''\n"})}),"\n",(0,r.jsx)(n.p,{children:"Replace:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<AMOUNT>"})," - Number of CEDRA you want (e.g., ",(0,r.jsx)(n.code,{children:"10"}),") on Octas."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<AUTH_KEY>"})," - your authentication key."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl --location --request POST \\\n  \"https://faucet.cedra.dev/mint?amount=10&auth_key=e3219c42819854d01f0ea6865b78061cdf657374637fee8aee7501f9e6e185db\" \\\n  --data ''\n"})}),"\n",(0,r.jsx)(n.p,{children:"The faucet responds with a JSON payload containing the transaction hash."}),"\n",(0,r.jsx)(n.h2,{id:"2--verify-your-balance",children:"2 \xb7 Verify your balance"}),"\n",(0,r.jsx)(n.p,{children:"After the transaction is finalized (normally within seconds), query the Cedra REST API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl "https://testnet.cedra.dev/v1/accounts/<ACCOUNT_ADDRESS>/balance/0x1::cedra_coin::CedraCoin"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"<ACCOUNT_ADDRESS>"})," with your account address (0x\u2026)."]}),"\n",(0,r.jsx)(n.p,{children:"Expected response is your balance in octas"}),"\n",(0,r.jsx)(n.h2,{id:"alternative--fund-via-cli-faucet-1cedra",children:"Alternative \xb7 Fund via CLI faucet (1\xa0CEDRA)"}),"\n",(0,r.jsx)(n.p,{children:"If you have the Cedra CLI installed, you can trigger the Cedra faucet directly without constructing a cURL request:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cedra account fund-with-faucet\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Funds ",(0,r.jsx)(n.strong,{children:"1\xa0CEDRA"})," to the specified account."]}),"\n",(0,r.jsx)(n.li,{children:"Uses the same faucet service behind the scenes."}),"\n",(0,r.jsx)(n.li,{children:"Helpful when scripting alongside other Cedra CLI commands."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"It will atomatically add 1 CEDRA to your default account"}),"\n",(0,r.jsx)(n.h2,{id:"usage-notes",children:"Usage notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No mainnet minting:"})," You cannot mint CedraCoin on mainnet; faucets are testnet\u2011only."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security:"})," Keep your private key and auth key secret."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"403 Forbidden"})})," - invalid or malformed ",(0,r.jsx)(n.code,{children:"account_address"}),"; double\u2011check it."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"429 Too Many Requests"})})," - rate limit reached; wait before retrying."]}),"\n",(0,r.jsxs)(n.li,{children:["**Balance still **",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"0"})})," - transaction not yet finalized; retry in ~30\xa0seconds or check the Cedra explorer."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);