"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[399],{6216:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"full-node","title":"Cedra Fullnode Overview","description":"A Cedra node is an always\u2011on service that tracks and serves the canonical state of the Cedra blockchain. All wallets, explorers, exchanges, and dapps communicate with the chain through these nodes.","source":"@site/docs/full-node.md","sourceDirName":".","slug":"/full-node","permalink":"/docs/full-node","draft":false,"unlisted":false,"editUrl":"https://github.com/cedra-labs/docs/edit/main/docs/full-node.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Cedra Architecture","permalink":"/docs/architecture"},"next":{"title":"Getting Started with Cedra","permalink":"/docs/getting-started/"}}');var r=t(4848),i=t(8453);const l={},o="Cedra Fullnode Overview",d={},a=[{value:"Internal Components",id:"internal-components",level:2},{value:"Fullnode Operation",id:"fullnode-operation",level:2},{value:"Upstream Options",id:"upstream-options",level:3},{value:"Why Run a Fullnode?",id:"why-run-a-fullnode",level:2},{value:"Testnet Diagnostics",id:"testnet-diagnostics",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"cedra-fullnode-overview",children:"Cedra Fullnode Overview"})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"Cedra node"})," is an always\u2011on service that tracks and serves the canonical state of the Cedra blockchain. All wallets, explorers, exchanges, and dapps communicate with the chain through these nodes."]}),"\n",(0,r.jsx)(n.p,{children:"Cedra\u2011core can operate in two mutually\u2011exclusive roles:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Role"}),(0,r.jsx)(n.th,{children:"Purpose"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Validator node"})}),(0,r.jsx)(n.td,{children:"Executes and signs blocks, participates in BFT consensus, and earns staking rewards."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Fullnode"})}),(0,r.jsxs)(n.td,{children:["Replicates the ledger for read/write access but ",(0,r.jsx)(n.strong,{children:"does not"})," vote in consensus."]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"internal-components",children:"Internal Components"}),"\n",(0,r.jsx)(n.p,{children:"A Cedra node is composed of several logical services, each running inside the same binary:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"REST API service"})," \u2013 HTTP+JSON entry point for clients."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mempool"})," \u2013 Admits, orders, and gossips pending transactions."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Execution"})," \u2013 Runs transactions through ",(0,r.jsx)(n.strong,{children:"MoveVM"})," and produces deterministic outputs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MoveVM"})," \u2013 Executes Move bytecode with linear\u2011type resource safety."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Storage"})," \u2013 Persists blocks, state, and events in a RocksDB\u2011backed datastore."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State synchronizer"})," \u2013 Streams certified ledger data from upstream peers and keeps local state in lock\u2011step."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tip\xa0:"})," The same cedra\u2011core binary can be started with ",(0,r.jsx)(n.code,{children:"--role validator"})," or ",(0,r.jsx)(n.code,{children:"--role fullnode"})," to switch behavior."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"fullnode-operation",children:"Fullnode Operation"}),"\n",(0,r.jsxs)(n.p,{children:["Fullnodes may be run by ",(0,r.jsx)(n.strong,{children:"anyone"}),". They bootstrap by downloading the ledger from an upstream peer and then either:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Re\u2011executing"})," every historical transaction to independently verify state, ",(0,r.jsx)(n.strong,{children:"or"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Replaying outputs"})," (faster) after checking the epoch accumulator root signed by the validators."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Fullnodes also accept client\u2011submitted transactions and forward them to validators, but they ",(0,r.jsx)(n.strong,{children:"do not"})," take part in consensus voting."]}),"\n",(0,r.jsx)(n.h3,{id:"upstream-options",children:"Upstream Options"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Fullnode type"}),(0,r.jsx)(n.th,{children:"Upstream peer"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Validator fullnode"})}),(0,r.jsx)(n.td,{children:"Directly follows a validator node."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Public fullnode"})}),(0,r.jsx)(n.td,{children:"Follows another fullnode."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"The functionality is identical\u2014the label only reflects who the upstream is."}),"\n",(0,r.jsx)(n.h2,{id:"why-run-a-fullnode",children:"Why Run a Fullnode?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use the local ",(0,r.jsx)(n.strong,{children:"REST interface"})," for unrestricted blockchain interaction."]}),"\n",(0,r.jsx)(n.li,{children:"Obtain a consistent, trust\u2011but\u2011verify view of the Cedra ledger."}),"\n",(0,r.jsx)(n.li,{children:"Bypass public endpoint rate limits for high\u2011volume reads."}),"\n",(0,r.jsx)(n.li,{children:"Run custom analytics over historical data and events."}),"\n",(0,r.jsx)(n.li,{children:"Receive real\u2011time on\u2011chain notifications without third\u2011party services."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testnet-diagnostics",children:"Testnet Diagnostics"}),"\n",(0,r.jsxs)(n.p,{children:["Cedra testnet currently runs ",(0,r.jsx)(n.strong,{children:"three validators"}),". You can confirm the validator set and chain metadata with cURL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Validator set (3 validators expected)\ncurl -s "https://testnet.cedra.dev/v1/accounts/0x1/resource/0x1::stake::ValidatorSet" | jq\n\n# Basic chain information\ncurl -s https://testnet.cedra.dev/v1 | jq\n'})}),"\n",(0,r.jsx)(n.p,{children:"Example output for the chain info endpoint:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "chain_id": 2,\n  "epoch": "66",\n  "ledger_version": "2757437",\n  "oldest_ledger_version": "0",\n  "ledger_timestamp": "1748360667256042",\n  "node_role": "validator",\n  "oldest_block_height": "0",\n  "block_height": "1378730",\n  "git_hash": "370dbf51ae76ed2fceb4267566eae10c1d6da6f1"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);