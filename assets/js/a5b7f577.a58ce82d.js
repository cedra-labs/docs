"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[541],{8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}},9723:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"guides/fee-splitter","title":"Fee\xa0Splitter\xa0Module","description":"Split any fungible\u2011token payment among multiple recipients with a single Move call.","source":"@site/docs/guides/fee-splitter.md","sourceDirName":"guides","slug":"/guides/fee-splitter","permalink":"/guides/fee-splitter","draft":false,"unlisted":false,"editUrl":"https://github.com/cedra-labs/docs/edit/main/docs/guides/fee-splitter.md","tags":[],"version":"current","frontMatter":{"id":"fee-splitter","title":"Fee\xa0Splitter\xa0Module","description":"Split any fungible\u2011token payment among multiple recipients with a single Move call.","sidebar\\\\_position":5},"sidebar":"docs","previous":{"title":"NFT Contract - Full Code Walkthrough","permalink":"/guides/first-nft"},"next":{"title":"Building Secure Token vesting, Marketplace payments via Escrow","permalink":"/guides/escrow"}}');var r=s(4848),i=s(8453);const a={id:"fee-splitter",title:"Fee\xa0Splitter\xa0Module",description:"Split any fungible\u2011token payment among multiple recipients with a single Move call.",sidebar_position:5},l=void 0,c={},o=[{value:"1. Project\xa0Overview\xa0\xa0\ud83d\uddc2\ufe0f",id:"1-projectoverview\ufe0f",level:2},{value:"2.\xa0Use\u2011Case\xa0Gallery\xa0\xa0\ud83d\udca1",id:"2usecasegallery",level:2},{value:"3.\xa0Move\xa0Code\xa0Breakdown \ud83d\udd0d",id:"3movecodebreakdown-",level:2},{value:"3.1\xa0Module declaration &amp; imports",id:"31module-declaration--imports",level:3},{value:"3.2\xa0Constants\xa0&amp;\xa0errors",id:"32constantserrors",level:3},{value:"3.3\xa0Data\xa0structures",id:"33datastructures",level:3},{value:"3.4\xa0Create\xa0splitter",id:"34createsplitter",level:3},{value:"3.5\xa0Distribute\xa0fees",id:"35distributefees",level:3},{value:"3.6\xa0Read\u2011only helpers",id:"36readonly-helpers",level:3},{value:"4.\xa0Technical\xa0Notes\xa0\xa0\ud83d\udee0\ufe0f",id:"4technicalnotes\ufe0f",level:2},{value:"5\xa0TypeScript\xa0Client\xa0\xa0\ud83e\udd1d",id:"5typescriptclient",level:2},{value:"6\xa0\xb7\xa0Next\xa0Steps\xa0\xa0\ud83d\ude80",id:"6nextsteps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Fee\xa0Splitter"})," lets an owner define recipients & proportional shares, then route a payment to all of them in one transaction. Works with ",(0,r.jsx)(n.strong,{children:"any"})," fungible asset (",(0,r.jsx)(n.code,{children:"CEDRA"}),", ",(0,r.jsx)(n.code,{children:"USDC"}),", \u2026) and is ideal for NFT royalties, marketplace fees, or affiliate payouts."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.mdxAdmonitionTitle,{children:[(0,r.jsx)(n.strong,{children:"Source code"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/cedra-labs/move-contract-examples/tree/main/fee-splitter",children:"GitHub \u2013 fee splitter module"})]})}),"\n",(0,r.jsxs)(n.admonition,{title:"Move Concepts Demonstrated",type:"info",children:[(0,r.jsx)(n.p,{children:"This fee splitter showcases several Move patterns:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/move/basics#vectors-dynamic-collections",children:"Vector Operations"})})," - Managing recipient lists with vectors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/move/basics#the-ability-system",children:"Struct Abilities"})})," - Using ",(0,r.jsx)(n.code,{children:"has copy, drop, store"})," for recipient data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/move/functions#view-functions",children:"View Functions"})})," - Read-only helpers for querying state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/move/errors",children:"Error Handling"})})," - Systematic error constants and validation"]}),"\n"]})]}),"\n",(0,r.jsx)(n.p,{children:"What\xa0you\u2019ll\xa0learn"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"How the Move module validates inputs and stores the split table"}),"\n",(0,r.jsxs)(n.li,{children:["How ",(0,r.jsx)(n.code,{children:"distribute_fees"})," calculates exact payouts in overflow\u2011safe math"]}),"\n",(0,r.jsx)(n.li,{children:"How to call the contract from a TypeScript client (create \u279c distribute \u279c query)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1-projectoverview\ufe0f",children:"1. Project\xa0Overview\xa0\xa0\ud83d\uddc2\ufe0f"}),"\n",(0,r.jsxs)(n.p,{children:["The splitter is a ",(0,r.jsx)(n.strong,{children:"keyed resource"})," that lives under its creator\u2019s account. Its state is immutable-updating the split requires deploying a new resource - making audits trivial."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Actor"}),(0,r.jsx)(n.th,{children:"Why they use a splitter"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Collection creator"}),(0,r.jsx)(n.td,{children:"Share primary/secondary sales with collaborators"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Marketplace backend"}),(0,r.jsx)(n.td,{children:"Route platform fees to treasury, referrer, bounty pool"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Game / metaverse DAO"}),(0,r.jsx)(n.td,{children:"Distribute tournament rewards to guilds & content creators"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Total shares are counted in\xa0",(0,r.jsx)(n.strong,{children:"basis points"})," (parts\u2011per\u201110\u202f000). A ",(0,r.jsx)(n.code,{children:"share =\xa0250"})," equals ",(0,r.jsx)(n.strong,{children:"2.5\u202f%"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"2usecasegallery",children:"2.\xa0Use\u2011Case\xa0Gallery\xa0\xa0\ud83d\udca1"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NFT Royalty"})," - 70\u202f% artist / 30\u202f% DAO \u2192 enables a single on\u2011chain call instead of two separate transfers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Marketplace Fee"})," - 50\u202f% treasury / 30\u202f% referrer / 20\u202f% bug\u2011bounty \u2192 keeps fee logic transparent & programmable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Affiliate Drop"})," - 10\u202f% early promoter / 90\u202f% creator \u2192 removes off\u2011chain accounting."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3movecodebreakdown-",children:"3.\xa0Move\xa0Code\xa0Breakdown \ud83d\udd0d"}),"\n",(0,r.jsx)(n.h3,{id:"31module-declaration--imports",children:"3.1\xa0Module declaration & imports"}),"\n",(0,r.jsx)(n.p,{children:"Declares the contract and pulls in Move\u2011standard helpers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"module FeeSplitter::FeeSplitter {\n    use aptos_framework::fungible_asset::Metadata;\n    use aptos_framework::primary_fungible_store;\n    use aptos_framework::object::Object;\n    use aptos_std::math64;\n    use std::{vector, error, signer};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Imports explained"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fungible_asset::Metadata"}),"\xa0- type handle that identifies any fungible token (CEDRA, USDC\xa0\u2026)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"primary_fungible_store"}),"\xa0- framework vault that debits/credits balances between accounts."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"object::Object"}),"\xa0- wrapper for referencing on\u2011chain objects such as metadata handles."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"aptos_std::math64"}),"\xa0- overflow\u2011safe 64\u2011bit multiply\u2011then\u2011divide helper used for proportional maths."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"std::{vector, error, signer}"}),"\xa0- core utilities for dynamic arrays, structured aborts, and signer introspection."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"32constantserrors",children:"3.2\xa0Constants\xa0&\xa0errors"}),"\n",(0,r.jsx)(n.p,{children:"Declare hard limits and machine\u2011readable abort codes, so clients can surface exact error messages."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"const MAX_TOTAL_SHARES: u64 = 10000; // 100\u202f%\nconst EINVALID_SHARE: u64      = 1;\nconst EINVALID_RECIPIENTS: u64 = 2;\nconst EINVALID_AMOUNT: u64     = 3;\nconst EINSUFFICIENT_BALANCE: u64 = 4;\nconst ESPLITTER_NOT_FOUND: u64   = 5;\nconst EINVALID_TOTAL_SHARES: u64 = 6;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Explanation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MAX_TOTAL_SHARES"})," caps aggregate shares at ",(0,r.jsx)(n.strong,{children:"10\u202f000\xa0bp = 100\u202f%"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Each ",(0,r.jsx)(n.code,{children:"E\u2026"})," constant matches an ",(0,r.jsx)(n.code,{children:"error::invalid_argument"})," or ",(0,r.jsx)(n.code,{children:"error::not_found"})," call inside the functions."]}),"\n",(0,r.jsx)(n.li,{children:"Apps can map these codes to human\u2011friendly toast messages."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"33datastructures",children:"3.3\xa0Data\xa0structures"}),"\n",(0,r.jsxs)(n.p,{children:["Declare the on\u2011chain ",(0,r.jsx)(n.em,{children:"object"})," that stores the split table and the lightweight payload for each recipient."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"struct Recipient has copy, drop, store {\n    addr: address,\n    share: u64, // parts of 10\u202f000\n}\n\nstruct FeeSplitter has key {\n    recipients: vector<Recipient>,\n    total_shares: u64,\n    owner: address,\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Explanation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Recipient"})," is a plain value struct, it can be freely copied inside memory."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"FeeSplitter"})," bears the `key` ability \u2192 It is a ",(0,r.jsx)(n.em,{children:"resource object"})," that lives at exactly ",(0,r.jsx)(n.strong,{children:"one account address"})," (",(0,r.jsx)(n.code,{children:"owner"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Because objects are single\u2011owner, they form a natural ownership boundary: only the ",(0,r.jsx)(n.code,{children:"owner"})," account can later ",(0,r.jsx)(n.code,{children:"move_from"})," / destroy / replace the splitter."]}),"\n",(0,r.jsxs)(n.li,{children:["Any call that needs the table (e.g., ",(0,r.jsx)(n.code,{children:"distribute_fees"}),") borrows it via ",(0,r.jsx)(n.code,{children:"acquires FeeSplitter"}),", enforcing exclusive access at runtime."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Storing the ",(0,r.jsx)(n.code,{children:"owner"})," field inside the struct is optional but handy for UI or cross\u2011module checks."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"34createsplitter",children:"3.4\xa0Create\xa0splitter"}),"\n",(0,r.jsxs)(n.p,{children:["Validates recipient addresses and share amounts, then stores a new ",(0,r.jsx)(n.code,{children:"FeeSplitter"})," object under the creator\u2019s account so future fee distributions have an immutable ownership anchor."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"public entry fun create_splitter(\n    creator: &signer,\n    addresses: vector<address>,\n    shares: vector<u64>,\n) {\n    // \u2026validation & assembly\u2026\n    move_to(creator, FeeSplitter { recipients, total_shares, owner: signer::address_of(creator) });\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key points"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensures arrays are non\u2011empty, equal length, and each share\xa0>\xa00."}),"\n",(0,r.jsxs)(n.li,{children:["Rejects totals above ",(0,r.jsx)(n.strong,{children:"10\u202f000"})," with ",(0,r.jsx)(n.code,{children:"EINVALID_TOTAL_SHARES"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Stores the resource under ",(0,r.jsx)(n.code,{children:"creator"}),"; one splitter per owner."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"35distributefees",children:"3.5\xa0Distribute\xa0fees"}),"\n",(0,r.jsxs)(n.p,{children:["Route an incoming fungible token\xa0",(0,r.jsx)(n.code,{children:"amount"})," from the caller to every recipient in the splitter according to their shares, completing the entire payout in one Move transaction."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"public entry fun distribute_fees(\n    sender: &signer,\n    splitter_owner: address,\n    asset_metadata: Object<Metadata>,\n    amount: u64,\n) acquires FeeSplitter {\n    let s = borrow_global<FeeSplitter>(splitter_owner);\n    for i in 0..vector::length(&s.recipients) {\n        let r = vector::borrow(&s.recipients, i);\n        let part = math64::mul_div(amount, r.share, s.total_shares);\n        if (part > 0) {\n            primary_fungible_store::transfer(sender, asset_metadata, r.addr, part);\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key points"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Token\u2011agnostic"})," - caller supplies a ",(0,r.jsx)(n.code,{children:"asset_metadata"})," handle, so any FA can be split."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Exclusive read"})," - ",(0,r.jsx)(n.code,{children:"acquires FeeSplitter"})," locks the object for the tx, preventing race conditions."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Exact maths"})," -  ",(0,r.jsx)(n.code,{children:"math64::mul_div"})," prevents overflow/rounding issues when computing ",(0,r.jsx)(n.code,{children:"amount * share / total"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Remainder handling"})," - if ",(0,r.jsx)(n.code,{children:"total_shares < 10\u202f000"}),", the leftover stays with ",(0,r.jsx)(n.code,{children:"sender"})," (often the marketplace contract)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"36readonly-helpers",children:"3.6\xa0Read\u2011only helpers"}),"\n",(0,r.jsx)(n.p,{children:"Return the full recipients vector and total shares for front\u2011ends or indexers."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"#[view]\npublic fun get_splitter_info(\n    splitter_addr: address\n): (vector<Recipient>, u64) acquires FeeSplitter {\n    let s = borrow_global<FeeSplitter>(splitter_addr);\n    (s.recipients, s.total_shares)\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key points"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Returns ",(0,r.jsx)(n.em,{children:"copies"})," of data; no risk of mutation."]}),"\n",(0,r.jsxs)(n.li,{children:["Fails with ",(0,r.jsx)(n.code,{children:"ESPLITTER_NOT_FOUND"})," if the resource is missing."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Lightweight boolean to see if a splitter resource lives at an address."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"#[view]\npublic fun splitter_exists(a: address): bool {\n    exists<FeeSplitter>(a)\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key points"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"exists<T>"})," intrinsic - O(1) storage lookup."]}),"\n",(0,r.jsx)(n.li,{children:"Handy for gating UI flows before making heavier view calls."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:""}),"\n",(0,r.jsxs)(n.p,{children:["Determine whether ",(0,r.jsx)(n.code,{children:"recipient_addr"})," is listed in the splitter\u2019s table."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"#[view]\npublic fun is_recipient(\n    splitter_addr: address,\n    recipient_addr: address\n): bool acquires FeeSplitter {\n    if (!exists<FeeSplitter>(splitter_addr)) return false;\n    let s = borrow_global<FeeSplitter>(splitter_addr);\n    for i in 0..vector::length(&s.recipients) {\n        if (vector::borrow(&s.recipients, i).addr == recipient_addr) return true;\n    };\n    false\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key points"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Early\u2011returns ",(0,r.jsx)(n.code,{children:"false"})," if splitter isn\u2019t deployed."]}),"\n",(0,r.jsx)(n.li,{children:"Iterates linearly through recipients \u2192 fine for small vectors; consider indexing for 100+ payees."}),"\n",(0,r.jsx)(n.li,{children:"Useful for UI badges (\u201cYou earn X\u202f% of fees\u201d)."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"4technicalnotes\ufe0f",children:"4.\xa0Technical\xa0Notes\xa0\xa0\ud83d\udee0\ufe0f"}),"\n",(0,r.jsx)(n.admonition,{title:"Basis\u2011points maths",type:"note",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"share = 100"})," \u21d2\xa01\u202f% \xa0\xa0|\xa0\xa0 ",(0,r.jsx)(n.code,{children:"share = 2\xa0500"})," \u21d2\xa025\u202f%\nAggregate shares must not exceed ",(0,r.jsx)(n.strong,{children:"10\u202f000\u202fbp (100\u202f%)"}),"."]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Remainder handling"})," \u2013 If ",(0,r.jsx)(n.code,{children:"total_shares"}),"\xa0less than\xa010\u202f000 the unallocated fraction stays with the payer, if it exceeds the limit the tx aborts with ",(0,r.jsx)(n.code,{children:"EINVALID_TOTAL_SHARES"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gas profile"})," \u2013 Algorithm is ",(0,r.jsx)(n.code,{children:"O(n)"})," over recipients."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token\u2011agnostic"})," \u2013 Works with any fungible asset, caller supplies the ",(0,r.jsx)(n.code,{children:"Metadata"})," handle so decimals/precision are respected automatically."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Upgrade pattern"})," \u2013 Publish a new splitter (or use a proxy) to change recipients, immutable design keeps old splits auditable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Edge\u2011case guards"})," \u2013 Rejects empty arrays, zero shares, amount\u202f\u2264\u202f0, or missing resource to prevent mis\u2011configuration."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5typescriptclient",children:"5\xa0TypeScript\xa0Client\xa0\xa0\ud83e\udd1d"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Here is"})," a complete front\u2011end flow that funds test wallets, publishes the split table, sends a payment, and reads back on\u2011chain state - everything a dApp needs to integrate the splitter."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'\n// -----------------------------------------------------------------------------\n// Fee\xa0Splitter client wrapper\nclass FeeSplitterClient {\n  private aptos: Aptos;\n  private moduleAddress: string;\n  private moduleName: string;\n\n  constructor(network: Network, moduleAddress: string = MODULE_ADDRESS) {\n    if (moduleAddress === "_") {\n      console.warn("\u26a0\ufe0f  MODULE_ADDRESS not set - deploy the contract then update this constant.");\n    }\n    this.aptos = new Aptos(new AptosConfig({ network }));\n    this.moduleAddress = moduleAddress;\n    this.moduleName = MODULE_NAME;\n  }\n\n  /* ---------------- faucet helpers ---------------- */\n  async fundAccount(addr: AccountAddress, amount: number = ONE_CEDRA) {\n    await this.aptos.faucet.fundAccount({ accountAddress: addr, amount });\n  }\n\n  /* ---------------- metadata helpers -------------- */\n  getCEDRAMetadata(): string {\n    return "0x000000000000000000000000000000000000000000000000000000000000000a";\n  }\n\n  /* ---------------- splitter calls ---------------- */\n  async createSplitter(creator: Account, recips: { address: AccountAddress; share: number }[]) {\n    const addresses = recips.map(r => r.address.toString());\n    const shares    = recips.map(r => r.share.toString());\n\n    const txn = await this.aptos.transaction.build.simple({\n      sender: creator.accountAddress,\n      data: {\n        function: `${this.moduleAddress}::${this.moduleName}::create_splitter`,\n        functionArguments: [addresses, shares],\n      },\n    });\n    const res = await this.aptos.signAndSubmitTransaction({ signer: creator, transaction: txn });\n    await this.aptos.waitForTransaction({ transactionHash: res.hash });\n  }\n\n  async distributeFees(sender: Account, splitterOwner: AccountAddress, amount: number) {\n    const txn = await this.aptos.transaction.build.simple({\n      sender: sender.accountAddress,\n      data: {\n        function: `${this.moduleAddress}::${this.moduleName}::distribute_fees`,\n        functionArguments: [splitterOwner.toString(), this.getCEDRAMetadata(), amount.toString()],\n      },\n    });\n    const res = await this.aptos.signAndSubmitTransaction({ signer: sender, transaction: txn });\n    await this.aptos.waitForTransaction({ transactionHash: res.hash });\n  }\n\n  async getSplitterInfo(splitterAddr: AccountAddress): Promise<SplitterInfo | null> {\n    const result = await this.aptos.view({\n      payload: {\n        function: `${this.moduleAddress}::${this.moduleName}::get_splitter_info`,\n        functionArguments: [splitterAddr.toString()],\n      },\n    });\n    const [recipients, totalShares] = result as [Recipient[], string];\n    return { recipients, total_shares: totalShares };\n  }\n}\n\n// -----------------------------------------------------------------------------\n// HAPPY\u2011PATH DEMO - fund \u279c create \u279c distribute \u279c query\nconst runHappyPath = async () => {\n  console.log("\ud83d\ude80 Fee Splitter happy\u2011path demo");\n  const client = new FeeSplitterClient(Network.DEVNET, MODULE_ADDRESS);\n\n  // 1\ufe0f\u20e3 Generate & fund actors\n  const creator    = Account.generate();\n  const recipient1 = Account.generate();\n  const recipient2 = Account.generate();\n  const payer      = Account.generate();\n\n  await Promise.all([\n    client.fundAccount(creator.accountAddress),\n    client.fundAccount(recipient1.accountAddress, ONE_CEDRA / 10),\n    client.fundAccount(recipient2.accountAddress, ONE_CEDRA / 10),\n    client.fundAccount(payer.accountAddress),\n  ]);\n\n  // 2\ufe0f\u20e3 Create 60/40 splitter\n  await client.createSplitter(creator, [\n    { address: recipient1.accountAddress, share: 60 },\n    { address: recipient2.accountAddress, share: 40 },\n  ]);\n\n  // 3\ufe0f\u20e3 Pay 0.01\xa0CEDRA and auto\u2011split\n  await client.distributeFees(payer, creator.accountAddress, EXAMPLE_AMOUNT);\n\n  // 4\ufe0f\u20e3 Read back state\n  const info = await client.getSplitterInfo(creator.accountAddress);\n  console.log(info);\n};\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Happy\u2011path explained"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fund wallets"})," - Faucet mints test tokens and gas for each freshly generated account."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create splitter"})," - Calls ",(0,r.jsx)(n.code,{children:"create_splitter"}),", storing a ",(0,r.jsx)(n.code,{children:"FeeSplitter"})," object with a 60/40 share table."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Distribute fees"})," - ",(0,r.jsx)(n.code,{children:"distribute_fees"})," transfers\xa00.01\u202fCEDRA from ",(0,r.jsx)(n.code,{children:"payer"})," to the two recipients in one tx."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Query state"})," - ",(0,r.jsx)(n.code,{children:"get_splitter_info"})," (a ",(0,r.jsx)(n.code,{children:"#[view]"})," function) returns the recipients vector & total shares for UI confirmation."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"6nextsteps",children:"6\xa0\xb7\xa0Next\xa0Steps\xa0\xa0\ud83d\ude80"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add a ",(0,r.jsx)(n.code,{children:"revoke_recipient"})," flow by publishing a V2 module that supports mutable vectors."]}),"\n",(0,r.jsx)(n.li,{children:"Integrate with an NFT minting contract to auto\u2011forward royalties on every sale."}),"\n",(0,r.jsxs)(n.li,{children:["Check other examples in ",(0,r.jsx)(n.a,{href:"/real-world-guides",children:"Real World Guides"})," page."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);