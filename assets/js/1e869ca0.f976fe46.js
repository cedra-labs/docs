"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[1044],{4355:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"nodes/delegation-pool-setup","title":"Running a Validator via Delegation Pool","description":"This guide walks you through setting up a Cedra validator node using a delegation pool structure. Unlike direct staking, delegation pools allow multiple users to combine their stakes under a single validator, democratizing network participation and enabling smaller token holders to contribute to network security.","source":"@site/docs/nodes/delegation-pool-setup.md","sourceDirName":"nodes","slug":"/nodes/delegation-pool-setup","permalink":"/nodes/delegation-pool-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/cedra-labs/docs/edit/main/docs/nodes/delegation-pool-setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Stake Pool Management","permalink":"/nodes/stake-pool-management"},"next":{"title":"Run a Full Node","permalink":"/nodes/full-node"}}');var a=o(4848),r=o(8453);const t={},s="Running a Validator via Delegation Pool",l={},d=[{value:"Understanding Delegation Pools vs Direct Staking",id:"understanding-delegation-pools-vs-direct-staking",level:2},{value:"Generate Your Delegation Pool Address",id:"generate-your-delegation-pool-address",level:2},{value:"Initialize Your Delegation Pool",id:"initialize-your-delegation-pool",level:2},{value:"Configure Validator Network Addresses",id:"configure-validator-network-addresses",level:2},{value:"Register Your Consensus Key",id:"register-your-consensus-key",level:2},{value:"Add Initial Stake to Your Pool",id:"add-initial-stake-to-your-pool",level:2},{value:"Join the Validator Set",id:"join-the-validator-set",level:2},{value:"Monitor Epoch Transition",id:"monitor-epoch-transition",level:2},{value:"Configure Validator Identity for Pool Operation",id:"configure-validator-identity-for-pool-operation",level:2},{value:"Create Validator Configuration File",id:"create-validator-configuration-file",level:2},{value:"Launch Your Delegation Pool Validator",id:"launch-your-delegation-pool-validator",level:2},{value:"Verify Your Delegation Pool Status",id:"verify-your-delegation-pool-status",level:2},{value:"Managing Your Delegation Pool",id:"managing-your-delegation-pool",level:2},{value:"Accepting New Delegators",id:"accepting-new-delegators",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"running-a-validator-via-delegation-pool",children:"Running a Validator via Delegation Pool"})}),"\n",(0,a.jsx)(n.p,{children:"This guide walks you through setting up a Cedra validator node using a delegation pool structure. Unlike direct staking, delegation pools allow multiple users to combine their stakes under a single validator, democratizing network participation and enabling smaller token holders to contribute to network security."}),"\n",(0,a.jsxs)(n.admonition,{title:"Prerequisites",type:"info",children:[(0,a.jsx)(n.p,{children:"Before proceeding, ensure you have:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Completed the ",(0,a.jsx)(n.a,{href:"./validator-setup",children:"Validator Setup and Configuration"})," guide through Step 7"]}),"\n",(0,a.jsxs)(n.li,{children:["Met the ",(0,a.jsx)(n.a,{href:"./requirements",children:"system requirements"})," for running a validator node"]}),"\n",(0,a.jsx)(n.li,{children:"Funded your delegator account with at least 10,001 CEDRA (10,000 for delegation + 1 for transaction fees)"}),"\n",(0,a.jsxs)(n.li,{children:["Initialized a delegator profile using ",(0,a.jsx)(n.code,{children:"cedra init --profile delegator"})]}),"\n"]})]}),"\n",(0,a.jsx)(n.h2,{id:"understanding-delegation-pools-vs-direct-staking",children:"Understanding Delegation Pools vs Direct Staking"}),"\n",(0,a.jsx)(n.p,{children:"Before we dive into the setup, it's crucial to understand the key differences between these two validator operation models:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Aspect"}),(0,a.jsx)(n.th,{children:"Direct Staking (Stake Pool)"}),(0,a.jsx)(n.th,{children:"Delegation Pool"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Minimum Stake"})}),(0,a.jsx)(n.td,{children:"100,000 CEDRA (all from owner)"}),(0,a.jsx)(n.td,{children:"10,000 CEDRA (can be combined from multiple delegators)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Participants"})}),(0,a.jsx)(n.td,{children:"Single owner/operator"}),(0,a.jsx)(n.td,{children:"Multiple delegators + operator"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Commission Structure"})}),(0,a.jsx)(n.td,{children:"Fixed commission percentage"}),(0,a.jsx)(n.td,{children:"Dynamic commission, shared rewards"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Management"})}),(0,a.jsx)(n.td,{children:"Centralized (owner controls all)"}),(0,a.jsx)(n.td,{children:"Decentralized (delegators can add/withdraw)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Use Case"})}),(0,a.jsx)(n.td,{children:"Individual validators with sufficient capital"}),(0,a.jsx)(n.td,{children:"Community validators, staking services"})]})]})]}),"\n",(0,a.jsxs)(n.admonition,{title:"Why Choose Delegation Pools?",type:"tip",children:[(0,a.jsx)(n.p,{children:"Delegation pools are ideal for:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Community validators"})," where multiple participants want to contribute"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Lower barrier to entry"})," with reduced minimum stake requirements"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Staking services"})," that manage validators on behalf of multiple users"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Decentralized governance"})," where stake distribution matters"]}),"\n"]})]}),"\n",(0,a.jsx)(n.h2,{id:"generate-your-delegation-pool-address",children:"Generate Your Delegation Pool Address"}),"\n",(0,a.jsx)(n.p,{children:"Every delegation pool needs a unique address that will serve as its identifier on the network. This address is deterministically generated from your account and a random seed number."}),"\n",(0,a.jsx)(n.p,{children:"First, generate a random number for your pool (we'll use 12345 as an example):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Generate the delegation pool address using a random seed\n# Replace 12345 with your own random number\ncargo run --release -p cedra account derive-resource-account-address \\\n  --address <your_account_address> \\\n  --seed "cedra_framework::delegation_pool12345" \\\n  --seed-encoding utf8\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example with a real address:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cargo run --release -p cedra account derive-resource-account-address \\\n  --address c8817e17ce3fabaacb695bbf6a3b600c6afbabf797960f29eaf8b88016a3f9d8 \\\n  --seed "cedra_framework::delegation_pool12345" \\\n  --seed-encoding utf8\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," This command generates a unique, deterministic address for your delegation pool. The seed ensures that your pool address is unique and can be recreated if needed. Save the returned pool address - you'll need it for all subsequent steps."]}),"\n",(0,a.jsx)(n.h2,{id:"initialize-your-delegation-pool",children:"Initialize Your Delegation Pool"}),"\n",(0,a.jsx)(n.p,{children:"With your pool address generated, it's time to create the actual delegation pool on-chain. This establishes the pool's smart contract and sets its initial parameters."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Initialize the delegation pool with minimum stake and your seed number\ncargo run --release -p cedra move run \\\n  --profile delegator \\\n  --function-id 0x1::delegation_pool::initialize_delegation_pool \\\n  --args u64:1000 string:<your_random_number>\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo run --release -p cedra move run \\\n  --profile delegator \\\n  --function-id 0x1::delegation_pool::initialize_delegation_pool \\\n  --args u64:1000 string:12345\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," This transaction creates your delegation pool smart contract on-chain with:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A minimum delegation amount of 1000 octas (smallest unit)"}),"\n",(0,a.jsx)(n.li,{children:"Your unique seed number for pool identification"}),"\n",(0,a.jsx)(n.li,{children:"Initial pool parameters and governance settings"}),"\n",(0,a.jsx)(n.li,{children:"The contract infrastructure for accepting delegations"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The pool is now ready to receive stakes and manage delegator funds, but it's not yet configured for validation."}),"\n",(0,a.jsx)(n.h2,{id:"configure-validator-network-addresses",children:"Configure Validator Network Addresses"}),"\n",(0,a.jsx)(n.p,{children:"Your delegation pool needs to broadcast its network endpoints so other validators can connect to it. This step registers your validator's communication addresses with the delegation pool."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Update network addresses for your delegation pool\ncargo run --release -p cedra node update-validator-network-addresses \\\n  --pool-address <pool_address> \\\n  --operator-config-file <path_to_operator>/genesis/v1/operator.yaml \\\n  --profile delegator\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo run --release -p cedra node update-validator-network-addresses \\\n  --pool-address 3905c8d82bf28dae1eda06996bf3ddc79fa8753194e864b0e57aa9e00ae89577 \\\n  --operator-config-file cedra-network/net/delegation-pool/genesis/v1/operator.yaml \\\n  --profile delegator\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," This command publishes your validator's network configuration on-chain, including:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Validator network endpoints for consensus participation"}),"\n",(0,a.jsx)(n.li,{children:"Full node endpoints for public network access"}),"\n",(0,a.jsx)(n.li,{children:"Network identity information for peer discovery"}),"\n",(0,a.jsx)(n.li,{children:"Authentication credentials for secure validator communication"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"register-your-consensus-key",children:"Register Your Consensus Key"}),"\n",(0,a.jsx)(n.p,{children:"The consensus key is crucial for block production and validation. You'll need to extract this key from your operator configuration and register it with the delegation pool."}),"\n",(0,a.jsx)(n.p,{children:"First, retrieve your consensus public key:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Navigate to your validator configuration\ncd net/genesis/v1\n\n# Find and copy the consensus_public_key value\ncat operator.yaml | grep consensus_public_key\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now register this key with your delegation pool:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Update the consensus key for your pool\ncargo run --release -p cedra node update-consensus-key \\\n  --consensus-public-key <consensus_public_key> \\\n  --pool-address <pool_address> \\\n  --operator-config-file <path_to_operator>/genesis/v1/operator.yaml \\\n  --profile delegator\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo run --release -p cedra node update-consensus-key \\\n  --consensus-public-key 0x87e8d96f7a5d35f65939bcdeada4815ba87b6630413f16ba90b470fa4fad876e6491add6d32f73242df75d10512f2573 \\\n  --pool-address 3905c8d82bf28dae1eda06996bf3ddc79fa8753194e864b0e57aa9e00ae89577 \\\n  --operator-config-file cedra-network/net/delegation-pool/genesis/v1/operator.yaml \\\n  --profile delegator\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," This transaction links your validator's consensus key to the delegation pool, enabling:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Block signing capabilities for your validator"}),"\n",(0,a.jsx)(n.li,{children:"Participation in the consensus protocol"}),"\n",(0,a.jsx)(n.li,{children:"Cryptographic proof of your validator's identity"}),"\n",(0,a.jsx)(n.li,{children:"Prevention of unauthorized validators using your pool"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"add-initial-stake-to-your-pool",children:"Add Initial Stake to Your Pool"}),"\n",(0,a.jsx)(n.p,{children:"Before your delegation pool can join the validator set, it needs to meet the minimum staking requirement. As the pool operator, you'll typically provide the initial stake."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Add stake to your delegation pool\ncargo run --release -p cedra move run \\\n  --profile delegator \\\n  --function-id 0x1::delegation_pool::add_stake \\\n  --args address:<pool_address> u64:<amount_in_octas>\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example with 10,000 CEDRA (minimum for delegation pools):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo run --release -p cedra move run \\\n  --profile delegator \\\n  --function-id 0x1::delegation_pool::add_stake \\\n  --args address:3905c8d82bf28dae1eda06996bf3ddc79fa8753194e864b0e57aa9e00ae89577 \\\n        u64:1000000000000\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," This transaction:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Transfers 10,000 CEDRA from your account to the delegation pool"}),"\n",(0,a.jsx)(n.li,{children:"Registers you as the first delegator with your stake amount"}),"\n",(0,a.jsx)(n.li,{children:"Updates the pool's total stake balance"}),"\n",(0,a.jsx)(n.li,{children:"Prepares the pool to meet validator requirements"}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{title:"Accepting Additional Delegations",type:"info",children:(0,a.jsxs)(n.p,{children:["After initialization, other users can delegate to your pool using the same ",(0,a.jsx)(n.code,{children:"add_stake"})," function. Each delegator's stake is tracked separately, and rewards are distributed proportionally."]})}),"\n",(0,a.jsx)(n.h2,{id:"join-the-validator-set",children:"Join the Validator Set"}),"\n",(0,a.jsx)(n.p,{children:"With your delegation pool configured and funded, it's time to request admission to the active validator set."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Request to join the validator set\ncargo run --release -p cedra node join-validator-set \\\n  --pool-address <pool_address> \\\n  --profile delegator\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo run --release -p cedra node join-validator-set \\\n  --pool-address 3905c8d82bf28dae1eda06996bf3ddc79fa8753194e864b0e57aa9e00ae89577 \\\n  --profile delegator\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," This command submits a transaction to add your delegation pool to the pending validator set. Your validator will become active at the beginning of the next epoch (approximately 2 hours on testnet)."]}),"\n",(0,a.jsx)(n.h2,{id:"monitor-epoch-transition",children:"Monitor Epoch Transition"}),"\n",(0,a.jsx)(n.p,{children:"The Cedra network processes validator set changes at epoch boundaries. You must wait for the next epoch (2 hours) before your validator becomes active."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Check current epoch and validator set status\ncurl https://testnet.cedra.dev/v1\n\n# Verify your pool is in the validator set\ncurl -s "https://testnet.cedra.dev/v1/accounts/0x1/resource/0x1::stake::ValidatorSet" | jq\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," During the epoch transition:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The network evaluates all pending validator requests"}),"\n",(0,a.jsx)(n.li,{children:"Validators meeting requirements are added to the active set"}),"\n",(0,a.jsx)(n.li,{children:"Your delegation pool begins participating in consensus"}),"\n",(0,a.jsx)(n.li,{children:"Rewards start accumulating for your delegators"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"configure-validator-identity-for-pool-operation",children:"Configure Validator Identity for Pool Operation"}),"\n",(0,a.jsx)(n.p,{children:"Your validator needs a modified identity file that references the delegation pool instead of your personal account."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Navigate to your validator directory\ncd net/v1\n\n# Create a pool-specific identity file\ncp validator-identity.yaml validator-identity-v2.yaml\n\n# Edit validator-identity-v2.yaml:\n# 1. Remove the line containing 'account_private_key'\n# 2. Replace account_address with your pool_address\nnano validator-identity-v2.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," You're creating a specialized identity configuration that:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Removes sensitive private keys from operational files"}),"\n",(0,a.jsx)(n.li,{children:"Links your validator to the delegation pool address"}),"\n",(0,a.jsx)(n.li,{children:"Maintains necessary public keys for network operations"}),"\n",(0,a.jsx)(n.li,{children:"Ensures secure validator operation without exposing account credentials"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"create-validator-configuration-file",children:"Create Validator Configuration File"}),"\n",(0,a.jsx)(n.p,{children:"Create a comprehensive configuration file for your delegation pool validator. This configuration is slightly different from direct staking validators."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Navigate to your validator directory\ncd net/v1\n\n# Create the validator configuration\nnano validator.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"Add the following configuration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'base:\n  data_dir: "data_validator"\n  role: "validator"\n  waypoint:\n    from_file: "../genesis/waypoint.txt"\nconsensus:\n  safety_rules:\n    service:\n      type: "local"\n    backend:\n      type: "on_disk_storage"\n      path: "./secure-data.json"\n      namespace: ~\n    initial_safety_rules_config:\n      from_file:\n        waypoint:\n          from_file: "../genesis/waypoint.txt"\n        identity_blob_path: "validator-identity-v2.yaml"\nexecution:\n  genesis_file_location: "../genesis/genesis.blob"\nvalidator_network:\n  discovery_method: "onchain"\n  listen_address: "/ip4/0.0.0.0/tcp/6182"\n  identity:\n    type: "from_file"\n    path: "validator-identity-v2.yaml"\n  network_id: "validator"\n  mutual_authentication: true\n  max_frame_size: 4194304 # 4 MiB\n  seeds:\n    31f1ff7f7bb3761f26db76abbc80a8be42a16d2c031801b8c9704f4e7a747a24:\n      addresses:\n      - "/dns/t-seed.cedra.dev/tcp/6163/noise-ik/0x2e103609b65a9369eb7c73aaf94e7f0f8da5c7883a3f0f359ef12fcf70161a30/handshake/0"\n      role: "Validator"\nadmin_service:\n  port: 9107\ninspection_service:\n  port: 9108\napi:\n  enabled: true\n  address: 127.0.0.1:8080\nstate_sync:\n  state_sync_driver:\n    enable_auto_bootstrapping: true\n    bootstrapping_mode: "ApplyTransactionOutputsFromGenesis"\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," This configuration includes:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"State Sync"}),": Auto-bootstrapping enabled for faster initial sync"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Different Seed Node"}),": Uses port 6163 for delegation pool validators"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Bootstrap Mode"}),": ApplyTransactionOutputsFromGenesis for optimized sync"]}),"\n",(0,a.jsx)(n.li,{children:"All other standard validator configurations remain the same"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"launch-your-delegation-pool-validator",children:"Launch Your Delegation Pool Validator"}),"\n",(0,a.jsx)(n.p,{children:"With all configurations complete, start your validator node:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Start the validator node\ncedra-node --config validator.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"What's happening:"})," Your delegation pool validator is now:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Connecting to the Cedra testnet through specialized seed nodes"}),"\n",(0,a.jsx)(n.li,{children:"Synchronizing with the blockchain using optimized bootstrapping"}),"\n",(0,a.jsx)(n.li,{children:"Managing stakes from multiple delegators"}),"\n",(0,a.jsx)(n.li,{children:"Participating in consensus on behalf of all pool participants"}),"\n",(0,a.jsx)(n.li,{children:"Distributing rewards proportionally to all delegators"}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{title:"Delegation Pool Validator Activated",type:"success",children:(0,a.jsx)(n.p,{children:"Your delegation pool validator is now running! It will begin participating in consensus at the next epoch, securing the network on behalf of all your delegators."})}),"\n",(0,a.jsx)(n.h2,{id:"verify-your-delegation-pool-status",children:"Verify Your Delegation Pool Status"}),"\n",(0,a.jsx)(n.p,{children:"Monitor your delegation pool's operation and delegator information:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check delegation pool status\ncargo run --release -p cedra move view \\\n  --function-id 0x1::delegation_pool::get_pool_info \\\n  --args address:<pool_address>\n\n# View your delegation balance\ncargo run --release -p cedra move view \\\n  --function-id 0x1::delegation_pool::get_stake \\\n  --args address:<pool_address> address:<delegator_address>\n\n# Check total pool stake\ncargo run --release -p cedra move view \\\n  --function-id 0x1::delegation_pool::get_total_stake \\\n  --args address:<pool_address>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"managing-your-delegation-pool",children:"Managing Your Delegation Pool"}),"\n",(0,a.jsx)(n.p,{children:"As a pool operator, you have additional responsibilities:"}),"\n",(0,a.jsx)(n.h3,{id:"accepting-new-delegators",children:"Accepting New Delegators"}),"\n",(0,a.jsx)(n.p,{children:"Other users can delegate to your pool by calling:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cargo run --release -p cedra move run \\\n  --function-id 0x1::delegation_pool::add_stake \\\n  --args address:<pool_address> u64:<amount>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Monitor Performance"}),": Set up monitoring dashboards for your pool's performance"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Attract Delegators"}),": Promote your pool to attract more delegators"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Maintain Uptime"}),": Ensure high availability to maximize rewards for delegators"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Community Engagement"}),": Build relationships with your delegator community"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Security Hardening"}),": Implement additional security measures for production deployment"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>s});var i=o(6540);const a={},r=i.createContext(a);function t(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);