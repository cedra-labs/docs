"use strict";(self.webpackChunkcedra_docs=self.webpackChunkcedra_docs||[]).push([[567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started with Cedra","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cedra CLI Installation Guide","href":"/getting-started/cli","docId":"getting-started/cli","unlisted":false},{"type":"link","label":"Building Your First Counter Smart Contract","href":"/getting-started/counter","docId":"getting-started/counter","unlisted":false},{"type":"link","label":"Get Cedra Test Tokens via CLI & cURL","href":"/getting-started/faucet","docId":"getting-started/faucet","unlisted":false},{"type":"link","label":"Prerequisites: Rust and Node.js Installation","href":"/getting-started/libs","docId":"getting-started/libs","unlisted":false},{"type":"link","label":"Your First Transaction","href":"/getting-started/tx","docId":"getting-started/tx","unlisted":false}],"href":"/"},{"type":"category","label":"Move Programming Language","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to Move - The Resource-Oriented Revolution","href":"/move/introduction","docId":"move/introduction","unlisted":false},{"type":"link","label":"Basic Syntax and Data Types","href":"/move/basics","docId":"move/basics","unlisted":false},{"type":"link","label":"Error Handling","href":"/move/errors","docId":"move/errors","unlisted":false},{"type":"link","label":"Conditionals, Loops, and Control Flow","href":"/move/flow","docId":"move/flow","unlisted":false},{"type":"link","label":"Functions in Move - Declaration and Usage","href":"/move/functions","docId":"move/functions","unlisted":false},{"type":"link","label":"Move Modules","href":"/move/modules","docId":"move/modules","unlisted":false},{"type":"link","label":"Move Ownership and Borrowing","href":"/move/ownership","docId":"move/ownership","unlisted":false},{"type":"link","label":"Resource Types - The Heart of Move\'s Security Model","href":"/move/resource","docId":"move/resource","unlisted":false}],"href":"/move/"},{"type":"link","label":"Handbook for Newcomers: Accounts, Move, and Beyond","href":"/handbook-for-newcomers","docId":"handbook-for-newcomers","unlisted":false},{"type":"link","label":"Cedra Documentation","href":"/intro","docId":"intro","unlisted":false},{"type":"link","label":"Cedra Architecture","href":"/architecture","docId":"architecture","unlisted":false},{"type":"category","label":"cli","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CLI Usage","href":"/cli/usage","docId":"cli/usage","unlisted":false}]},{"type":"link","label":"Cedra Fullnode Overview","href":"/full-node","docId":"full-node","unlisted":false},{"type":"link","label":"Glossary","href":"/glossary","docId":"glossary","unlisted":false},{"type":"category","label":"guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Build an Escrow Contract","href":"/guides/escrow","docId":"guides/escrow","unlisted":false},{"type":"link","label":"Fee Splitter Module","href":"/guides/fee-splitter","docId":"guides/fee-splitter","unlisted":false},{"type":"link","label":"Cedra\xa0Fungible Asset (FA) End\u2011to\u2011End Guide","href":"/guides/first-fa","docId":"guides/first-fa","unlisted":false},{"type":"link","label":"NFT Contract  -  Full Code Walkthrough","href":"/guides/first-nft","docId":"guides/first-nft","unlisted":false}]},{"type":"link","label":"Real World Guides","href":"/real-world-guides","docId":"real-world-guides","unlisted":false}],"docs":[{"type":"category","label":"Getting Started","items":[{"type":"category","label":"Development Environment","items":[{"type":"link","label":"Setup Nodejs and Rust","href":"/getting-started/libs","docId":"getting-started/libs","unlisted":false},{"type":"link","label":"CLI Installation","href":"/getting-started/cli","docId":"getting-started/cli","unlisted":false},{"type":"link","label":"Faucet","href":"/getting-started/faucet","docId":"getting-started/faucet","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"First Transactions","href":"/getting-started/tx","docId":"getting-started/tx","unlisted":false},{"type":"link","label":"Build a Counter Contract","href":"/getting-started/counter","docId":"getting-started/counter","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/"},{"type":"category","label":"Move Programming Fundamentals","items":[{"type":"link","label":"Resource First","href":"/move/introduction","docId":"move/introduction","unlisted":false},{"type":"link","label":"Basic Syntax and Data Types","href":"/move/basics","docId":"move/basics","unlisted":false},{"type":"link","label":"Move Modules","href":"/move/modules","docId":"move/modules","unlisted":false},{"type":"link","label":"Functions in Move","href":"/move/functions","docId":"move/functions","unlisted":false},{"type":"link","label":"Resource Types","href":"/move/resource","docId":"move/resource","unlisted":false},{"type":"link","label":"Ownership & Borrowing","href":"/move/ownership","docId":"move/ownership","unlisted":false},{"type":"link","label":"Conditionals, Loops, and Control Flow","href":"/move/flow","docId":"move/flow","unlisted":false},{"type":"link","label":"Error Handling","href":"/move/errors","docId":"move/errors","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/move/"},{"type":"category","label":"Introduction to Cedra","items":[{"type":"link","label":"Handbook for Newcomers","href":"/handbook-for-newcomers","docId":"handbook-for-newcomers","unlisted":false},{"type":"category","label":"Architecture","items":[{"type":"link","label":"Full Node","href":"/full-node","docId":"full-node","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/architecture"}],"collapsed":true,"collapsible":true,"href":"/intro"},{"type":"link","label":"CLI Usage","href":"/cli/usage","docId":"cli/usage","unlisted":false},{"type":"category","label":"Real World Guides","items":[{"type":"link","label":"Fungible Asset (FA) End-to-End Guide","href":"/guides/first-fa","docId":"guides/first-fa","unlisted":false},{"type":"link","label":"NFT Contract - Full Code Walkthrough","href":"/guides/first-nft","docId":"guides/first-nft","unlisted":false},{"type":"link","label":"Build a Fee Splitter Contract","href":"/guides/fee-splitter","docId":"guides/fee-splitter","unlisted":false},{"type":"link","label":"Building Secure Token vesting, Marketplace payments via Escrow","href":"/guides/escrow","docId":"guides/escrow","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/real-world-guides"},{"type":"link","label":"Glossary","href":"/glossary","docId":"glossary","unlisted":false}]},"docs":{"architecture":{"id":"architecture","title":"Cedra Architecture","description":"Cedra couples the linear\u2011type Move VM with Block\u2011STM parallel execution and a pipelined HotStuff variant (CedraBFT) to deliver 10\u202fk+ TPS and  less than 1\u202fs deterministic finality. State versions are hashed into a Sparse Merkle Tree, enabling light\u2011client proofs and fast sync. On\u2011chain governance hot\u2011swaps modules, VM configs, and consensus rules; hook APIs surface governance events. Native sub\u2011chains, a streaming indexer, and a VRF\u2011backed randomness oracle are built\u2011in. Resource\u2011safe token/NFT standards plus zero\u2011copy account storage give developers safe, upgrade\u2011friendly primitives atop a vertically integrated L1 stack.","sidebar":"docs"},"cli/usage":{"id":"cli/usage","title":"CLI Usage","description":"Before using the Cedra CLI, ensure you have:","sidebar":"docs"},"full-node":{"id":"full-node","title":"Cedra Fullnode Overview","description":"A Cedra node is an always\u2011on service that tracks and serves the canonical state of the Cedra blockchain. All wallets, explorers, exchanges, and dapps communicate with the chain through these nodes.","sidebar":"docs"},"getting-started/cli":{"id":"getting-started/cli","title":"Cedra CLI Installation Guide","description":"The Cedra Command Line Interface (CLI) is the primary tool for developers and users to interact with the Cedra blockchain. It lets you manage accounts, deploy Move modules, test code, execute transactions, and query network state.","sidebar":"docs"},"getting-started/counter":{"id":"getting-started/counter","title":"Building Your First Counter Smart Contract","description":"Welcome to your first Move smart contract on Cedra! In this tutorial, you\'ll learn how to create, compile, test, and deploy a simple counter contract that demonstrates the fundamental concepts of Move programming.","sidebar":"docs"},"getting-started/faucet":{"id":"getting-started/faucet","title":"Get Cedra Test Tokens via CLI & cURL","description":"This short guide explains how to request Cedra testnet tokens (CEDRA) from CLI and from the command line using curl. These tokens are only for development and testing - they have no real\u2011world value, and it is impossible to mint CedraCoin on the Cedra mainnet.","sidebar":"docs"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started with Cedra","description":"Cedra is the first community-owned Layer-1 blockchain built on the Move language that lets anyone spin up and govern their own sovereign networks. Designed as a public good, Cedra fuses protocol development, funding, and growth into open collaboration among core contributors, a non-profit foundation, and a worldwide guild of builders.","sidebar":"docs"},"getting-started/libs":{"id":"getting-started/libs","title":"Prerequisites: Rust and Node.js Installation","description":"Ready to build on Cedra? Let\'s get your development environment set up! \ud83d\ude80","sidebar":"docs"},"getting-started/tx":{"id":"getting-started/tx","title":"Your First Transaction","description":"Learn how to create, sign, and submit your first transaction on the CEDRA blockchain","sidebar":"docs"},"glossary":{"id":"glossary","title":"Glossary","description":"Core Concepts","sidebar":"docs"},"guides/escrow":{"id":"guides/escrow","title":"Build an Escrow Contract","description":"In this guide, we\'ll walk through how escrow works by explaining its flow. We\'ll cover how funds are locked, released, or returned in a secure and predictable way.","sidebar":"docs"},"guides/fee-splitter":{"id":"guides/fee-splitter","title":"Fee Splitter Module","description":"Split any fungible-token payment among multiple recipients with a single Move call.","sidebar":"docs"},"guides/first-fa":{"id":"guides/first-fa","title":"Cedra\xa0Fungible Asset (FA) End\u2011to\u2011End Guide","description":"All code is taken directly from the fa-example folder in the (cedra\u2011labs repo)","sidebar":"docs"},"guides/first-nft":{"id":"guides/first-nft","title":"NFT Contract  -  Full Code Walkthrough","description":"Before starting this guide, make sure you have:","sidebar":"docs"},"handbook-for-newcomers":{"id":"handbook-for-newcomers","title":"Handbook for Newcomers: Accounts, Move, and Beyond","description":"This guide is for Web3 newcomers. If you\'ve worked with any Web2 technology and are curious about how blockchains work or want to start building on Cedra, this is a perfect place to begin.","sidebar":"docs"},"intro":{"id":"intro","title":"Cedra Documentation","description":"Cedra is a next-generation, public-good blockchain that reimagines how infrastructure is built, funded, and governed in the Move ecosystem. Cedra extends the Move resource model with custom modules that make network composition a first-class feature: any team can deploy a fully fledged sub-network - complete with its own gas economics, validator set, and governance - using familiar Move tooling and CLI workflows.","sidebar":"docs"},"move/basics":{"id":"move/basics","title":"Basic Syntax and Data Types - Building Blocks of Move","description":"Master Move\'s syntax fundamentals and type system. Learn about variables, data types, structs, and the unique ability system that makes Move perfect for blockchain development.","sidebar":"docs"},"move/errors":{"id":"move/errors","title":"Error Handling and Assertions in Move","description":"Master error handling in Move - from assertions and abort codes to advanced patterns. Learn how to build robust modules that fail gracefully and provide clear error messages.","sidebar":"docs"},"move/flow":{"id":"move/flow","title":"Conditionals, Loops, and Control Flow","description":"Master control flow in Move - from if expressions to loops and pattern matching. Learn how to write efficient, safe control structures while maintaining resource safety.","sidebar":"docs"},"move/functions":{"id":"move/functions","title":"Functions in Move - Declaration and Usage","description":"Master Move functions - from basic declarations to advanced patterns. Learn about parameters, return values, generics, and how to design robust blockchain APIs.","sidebar":"docs"},"move/index":{"id":"move/index","title":"Move Programming Language","description":"Learn Move - the revolutionary blockchain programming language designed for secure digital asset management","sidebar":"docs"},"move/introduction":{"id":"move/introduction","title":"Introduction to Move - The Resource-Oriented Revolution","description":"Learn about Move, the revolutionary blockchain programming language that treats digital assets like physical objects. Discover why Move\'s resource-oriented approach eliminates entire classes of vulnerabilities.","sidebar":"docs"},"move/modules":{"id":"move/modules","title":"Move Modules - Understanding Modular Programming","description":"Learn how to organize Move code into modules, control visibility with public and friend functions, and build scalable blockchain applications with proper separation of concerns.","sidebar":"docs"},"move/ownership":{"id":"move/ownership","title":"Move Ownership and Borrowing","description":"Master Move\'s ownership system and borrowing rules. Learn how references enable efficient access to resources without taking ownership, and discover patterns for safe resource manipulation.","sidebar":"docs"},"move/resource":{"id":"move/resource","title":"Resource Types - The Heart of Move\'s Security Model","description":"Deep dive into Move\'s revolutionary resource types. Learn how linear types prevent duplication and loss of digital assets, making Move the safest language for blockchain development.","sidebar":"docs"},"real-world-guides":{"id":"real-world-guides","title":"Real World Guides","description":"Choose what DApp you want to build next","sidebar":"docs"}}}}')}}]);